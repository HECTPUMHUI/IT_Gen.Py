###################################################################################		
				Перемещение по каталогам 

# перейти в каталог
cd ~/Desktop/project/git1

# cоздать каталог
mkdir

#  create new file(win/linux)
touch <file_name>

# показать текущее местоположение
pwd

# показать содержимое каталога
ls

# показать все содержимое каталога
dir-R

# вывод содержимого каталога
cat

###################################################################################
				Создание нового каталога Git:

# создать пустой каталог
git init ~/Desktop/project/git1

# иници-ть существующий каталог
git init

####################################################################################
				Формирование ключа безопасности:

ssh-keygen

# Копирование ключа 
cat ~/.ssh/id_rsa.pub

# Копирование ключа в буфер
pbcopy < ~/.ssh/id_rsa.pub

# Изменение URL-адреса в локальном каталоге
git remote set-url origin


####################################################################################
				Установка глобального имени фиксации и адрес электронной почты:

git config --global user.name "Your Name"
git config --global user.email "youremail@yourdomain.com"

# Для одного репозитория:

1- 	Сначала переключите корневой каталог репозитория:
2- 	git config user.name "Your Name"
	git config user.email "youremail@yourdomain.com"

# Проверка конфигурации 
git config --list (Q чтобы закрыть команду)
git config user.name
git config user.email

####################################################################################
				Добавление файлов:

# Добавление файла для следующего коммита
git add 

# Добавление всех файлов в индекс для следующего коммита
git add . 

# Регистрирация изменений (Коммиты — контрольные точки на временной шкале проекта Git.)
git commit -m "Commit message"

# Выполнение коммита состояния со всеми изменениями в рабочем каталоге.
git commit -a

# Создает коммит всех проиндексированных изменений и добавляет к коммиту подставленный комментарий.(для опытных пользователей)
git commit -am "commit message"

# При передаче этого параметра будет изменен последний коммит
# Вместо создания нового коммита проиндексированные изменения будут добавлены в предыдущий коммит.
# Кроме того, эта команда откроет настроенный текстовый редактор системы с предложением изменить указанный ранее комментарий к коммиту
git commit --amend

# Отмена добавления или изменений
git reset

# Отправка подтвержденных изменений в удаленные репозитории
git push

# Юзал, когда вылезли такие ошибки
# error: src refspec master does not match any.  
# error: failed to push some refs to
git push origin master --force

####################################################################################
				Git status: проверка репозитория

# Проверить результат выполнения команды 
# Отображает состояние рабочего каталога и раздела проиндексированных файлов. 
# С ее помощью можно проверить индексацию изменений и увидеть файлы, которые не отслеживаются Git.
git status

# Анализ текущего состояния репозитория Git
# отображает отправленные снимки состояния и позволяет просматривать и фильтровать историю проекта, а также проводить поиск по ней.
git log


####################################################################################
				Клонирование 

git clone [путь до клонируемого репозитория]

####################################################################################
				Сравнение изменений

Сравнение — функция, анализирующая два входных набора данных и отображающая различия между ними.

git diff

####################################################################################
				Работа с ветками Git

# показать все существующие ветки
git remote -v

# использовал, когда насоздавал кучу веток
git remote remove <name> - удаление адреса в локальном каталоге
git remote rename <old> <new> - переименование адреса в локальном каталоге






